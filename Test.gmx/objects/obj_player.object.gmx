<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_playerIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// VARIABLES
var movementSpeed = 3;
var movSpeedDecrease = 0.15*movementSpeed;
depth = -y;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// MOVEMENT

// General movement
hspeed = movementSpeed * (keyboard_check(ord('D')) - keyboard_check(ord('A')))
vspeed = movementSpeed * (keyboard_check(ord('S')) - keyboard_check(ord('W')))

// Collisions
if(hspeed != 0 &amp;&amp; !place_free(x + hspeed, y)){
    if(hspeed &gt; 0)
        move_contact_solid(0, hspeed)
    if(hspeed &lt; 0)
        move_contact_solid(180, hspeed)
    hspeed = 0;
}

if(vspeed != 0 &amp;&amp; !place_free(x, y + vspeed)){
    if(vspeed &gt; 0)
        move_contact_solid(270, hspeed)
    if(vspeed &lt; 0)
        move_contact_solid(90, hspeed)
    vspeed = 0;
}

// Strafing fix
if(hspeed != 0 &amp;&amp; vspeed != 0){
    hspeed = hspeed * 0.75;
    vspeed = vspeed * 0.75;
}


// Slow down for movement
if(speed &lt; 0){
    if(movSpeedDecrease &gt; speed)
        speed = 0;
    else
        speed = speed + movSpeedDecrease;
}
if(speed &gt; 0){
    if(movSpeedDecrease &gt; speed)
        speed = 0;
    else
        speed = speed - movSpeedDecrease;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ANIMATION

// Animate movement
if(hspeed != 0 || vspeed != 0){
    sprite_index = spr_playerMovement;
    image_speed = 0.16;
}
else {
    image_speed = 0;
    sprite_index = spr_playerIdle;
}

// Flip sprite
if(hspeed &lt; 0)
    image_xscale = -1;
if(hspeed &gt; 0)
    image_xscale = 1;    

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///PLANT PLANT
if(keyboard_check(ord('E'))){
    var place_x = round((x - 16) / 32)*32;
    var place_y = round((y - 16) / 32)*32;
    instance_create(place_x, place_y, obj_plant1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
